"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_All <- PMI_All[c(6:257),]
PMI_Ita <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 4,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_Ita <- PMI_Ita[c(6:257),]
PMI_Esp <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 5,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_Esp <- PMI_Esp[c(6:257),]
PMI_UK <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 6,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_UK <- PMI_UK[c(6:257),]
PMI_USA <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 7,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_USA <- PMI_USA[c(6:257),]
PMI_Chi <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 8,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_Chi <- PMI_Chi[c(6:257),]
PMI_Ind <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 9,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_Ind <- PMI_Ind[c(6:257),]
PMI_Bra <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 10,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_Bra <- PMI_Bra[c(6:257),]
PMI_Jap <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 11,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_Jap <- PMI_Jap[c(6:257),]
PMI_Rus <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 12,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_Rus <- PMI_Rus[c(6:257),]
PMI_Pol <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 13,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_Pol <- PMI_Pol[c(6:257),]
PMI_Mex <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 14,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_Mex <- PMI_Mex[c(6:257),]
PMI_Can <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 15,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_Can <- PMI_Can[c(6:257),]
PMI_Tur <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 16,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_Tur <- PMI_Tur[c(6:257),]
PMI_Hol <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 17,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_Hol <- PMI_Hol[c(6:257),]
PMI_Aus <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 18,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_Aus <- PMI_Aus[c(6:257),]
PMI_Indo <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 19,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_Indo <- PMI_Indo[c(6:257),]
PMI_NZ <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 20,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_NZ <- PMI_NZ[c(6:257),]
PMI_Egy <- read_excel("C:/Users/paulf/Downloads/Test Git/Data PMI_memoire.xlsx",
sheet = 21,
col_names = c("Date","Composite", "Synthetique industrie",
"Production passee", "Emploi_industrie",
"Nouvelles commandes", "Stocks",
"Delais de livraison", "Commandes export",
"Prix output industrie", "Prix input industrie",
"Synthetique services = activites",
"Nouvelles affaires", "Emploi_services",
"Backlogs of work","Activite future",
"Prix output services", "Prix input services"),
col_types = c("date","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric","numeric",
"numeric","numeric","numeric")
)
PMI_Egy <- PMI_Egy[c(6:257),]
#############################################################
#Fusion de toutes ces df
Periodes <- rep(1:252, 21)
Pays_nom <- c(rep("Euro", 252), rep("Fra", 252), rep("All", 252), rep("Ita", 252)
, rep("Esp", 252), rep("UK", 252), rep("USA", 252), rep("Chi", 252)
, rep("Ind", 252), rep("Bra", 252), rep("Jap", 252), rep("Rus", 252)
, rep("Pol", 252), rep("Mex", 252), rep("Can", 252), rep("Tur", 252)
, rep("Hol", 252), rep("Aus", 252), rep("Indo", 252), rep("NZ", 252)
, rep("Egy", 252))
Pays_num <- c(rep(1:21, each = 252))
PMI <- rbind(PMI_euro,PMI_Fra,PMI_All,PMI_Ita,PMI_Esp,PMI_UK,PMI_USA,PMI_Chi
,PMI_Ind,PMI_Bra,PMI_Jap,PMI_Rus,PMI_Pol,PMI_Mex,PMI_Can,PMI_Tur
,PMI_Hol,PMI_Aus,PMI_Indo,PMI_NZ,PMI_Egy)
PMI <- cbind(Periodes, PMI)
PMI <- cbind(Pays_nom, PMI)
PMI <- cbind(Pays_num, PMI)
#############################################################
#Supprimer les bases qui seront inutiles
rm(PMI_euro)
rm(PMI_Fra)
rm(PMI_All)
rm(PMI_Ita)
rm(PMI_Esp)
rm(PMI_UK)
rm(PMI_USA)
rm(PMI_Chi)
rm(PMI_Ind)
rm(PMI_Bra)
rm(PMI_Jap)
rm(PMI_Rus)
rm(PMI_Pol)
rm(PMI_Mex)
rm(PMI_Can)
rm(PMI_Tur)
rm(PMI_Hol)
rm(PMI_Aus)
rm(PMI_Indo)
rm(PMI_NZ)
rm(PMI_Egy)
rm(Pays_nom)
rm(Pays_num)
rm(Periodes)
fra <- dataprep(foo = PMI,
predictors = "Composite" ,
predictors.op = "mean" ,
time.predictors.prior = 9:252,
dependent = "Composite",
unit.variable = "Pays_num",
unit.names.variable = "Pays_nom",
time.variable = "Periodes",
treatment.identifier = 2,
controls.identifier = c(3:5),
time.optimize.ssr = 50:252,
time.plot = 9:252
)
#Axes d'ameliorations :
#(i) faire tourner avec d'autres variables predictors, pour constater la potentielle
#amelioration de l'estimation (Hyp: elle sera forcemment plus precise car elle est
#au moins aussi precise que l'estimation qui considere seulement la variable composite)
#(ii) completer la df pour faire tourner avec plus de pays donateurs sur des
#periodes plus grandes
# PARTIE 2 #
#Creation du vecteur de ponderations de la contribution des pays donateurs
#"Solution w"
#Creation du vecteur de ponderations de la contribution des variables Predictors
#"Solution v" (=1 car seulement "Composite")
list.synth.fra <- synth(data.prep.obj = fra,
method = "BFGS")
#Pi : Il est possible d'utiliser plusieurs algos d'optimisation c("Nelder-Mead', 'BFGS', 'CG', 'L-BFGS-B', 'nlm', 'nlminb', 'spg', and 'ucminf")
#Le BFGS est le quasi-Newton algorithm
#Axes d'amelioration :
#(i) Verifier le fonctionnement des differents algos, les tester si cela parait pertinent
serie.synth.fra <- fra$Y0plot %*% list.synth.fra$solution.w
gaps.list.synth.fra <- fra$Y1plot - serie.synth.fra
date.plot <- PMI$Date[c(9:252)]
fra.plot <- cbind(date.plot, serie.synth.fra, gaps.list.synth.fra) %>% as.data.frame
colnames(fra.plot) <- c("Dates", "Serie synthetique de la France ",
"Serie reelle de la France")
View(fra.plot)
as.POSIXct.Date(fra.plot$Dates)
################################
# BROUILLON AVANT INTEGRATION DANS LE CODE
date.plot <- PMI$Date[c(9:252)]
fra.plot <- cbind(date.plot, serie.synth.fra, gaps.list.synth.fra
View(fra.plot)
fra.plot <- cbind(date.plot, serie.synth.fra, gaps.list.synth.fra)
View(fra.plot)
date.plot <- PMI$Date[c(9:252)]
serie.reelle.fra <- fra$Y1plot
serie.synth.fra <- serie.synth.fra
help("data.frame")
fra.plot <- data.frame(date.plot, as.numeric(serie.reelle.fra), as.numeric(serie.synth.fra))
View(fra.plot)
colnames(fra.plot) <- c("Dates", "Serie synthetique de la France ",
"Serie reelle de la France")
View(fra.plot)
help("ggplot")
ggplot(fra.plot, aes(x = Dates)) +
#Gaps.plot est une fonction du package synth qui permet de tracer. Petit bemol
#Cela peut impliquer un changement de forme entre les graphs de ggplot()
#Peut etre plus clair de faire tous nos graphiques avec la meme fonction (ex : ggplot())
# PARTIE 3 #
mse<-((fra$Y1plot - (fra$Y0plot %*% list.synth.fra$solution.w))^2)
View(fra.plot)
ggplot(fra.plot, aes(x = "Dates")) +
geom_line(aes(y = "Serie synthetique de la France"), color = "blue") +
geom_line(aes(y = "Serie reelle de la France"), color = "red")
fra.plot <- data.frame(date.plot, as.numeric(serie.reelle.fra), as.numeric(serie.synth.fra))
View(fra.plot)
View(fra.plot)
ggplot(data=fra.plot, aes(x = "Dates")) +
geom_line(aes(y = "Serie synthetique de la France"), color = "blue") +
geom_line(aes(y = "Serie reelle de la France"), color = "red") +
theme_classic()
colnames(fra.plot) <- c("a", "b",
"c")
View(fra.plot)
ggplot(data=fra.plot, aes(x = a)) +
geom_line(aes(y = b), color = "blue") +
geom_line(aes(y = c), color = "red") +
geom_hline(yintercept=(50),linetype="dotted")+
geom_vline(xintercept = a, linetype="dotted")+
theme_classic()
ggplot
help(ggplot)
View(fra.plot)
ggplot(fra.plot, aes(a)) +
geom_line(aes(y = b), color = "blue") +
geom_line(aes(y = c), color = "red") +
geom_hline(yintercept=(50),linetype="dotted")+
geom_vline(xintercept = a, linetype="dotted")+
theme_classic()
ggplot(fra.plot, aes(a)) +
geom_line(aes(y = b), color = "blue") +
geom_line(aes(y = c), color = "red") +
theme_classic()
ggplot(fra.plot, aes(a)) +
geom_line(aes(y = b), color = "blue") +
geom_line(aes(y = c), color = "red") +
geom_hline(yintercept=(50),linetype="dotted")+
theme_classic()
ggplot(fra.plot, aes(a)) +
geom_line(aes(y = b), color = "blue") +
geom_line(aes(y = c), color = "red") +
geom_hline(yintercept=(50),linetype="dotted")+
xlab("Dates")+
ylab("Composite")+
theme_classic()
date.plot <- PMI$Date[c(9:252)]
serie.reelle.fra <- fra$Y1plot
serie.synth.fra <- serie.synth.fra
fra.plot <- data.frame(date.plot, as.numeric(serie.reelle.fra), as.numeric(serie.synth.fra))
colnames(fra.plot) <- c("Dates", "Serie synthetique de la France ",
"Serie reelle de la France")
View(fra.plot)
ggplot(fra.plot, aes(Dates)) +
geom_line(aes(y = "Serie synthetique de la France"), color = "blue") +
geom_line(aes(y = "Serie reelle de la France"), color = "red") +
geom_hline(yintercept=(50),linetype="dotted")+
xlab("Dates")+
ylab("Composite")+
theme_classic()
View(fra.plot)
colnames(fra.plot) <- c("Dates", "Synth","Reelle")
ggplot(fra.plot, aes(Dates)) +
geom_line(aes(y = Synth), color = "blue") +
geom_line(aes(y = Reelle), color = "red") +
geom_hline(yintercept=(50),linetype="dotted")+
xlab("Dates")+
ylab("Composite")
theme_classic()
ggplot(fra.plot, aes(Dates)) +
geom_line(aes(y = Synth), color = "blue") +
geom_line(aes(y = Reelle), color = "red") +
geom_hline(yintercept=(50),linetype="dotted")+
xlab("Dates")+
ylab("Composite")
theme_classic()
gaps.plot(synth.res = list.synth.fra,
dataprep.res = fra,
Ylab = c("Ecart"),
Xlab = c("Periodes"),
Main = c("Ecart : Traite - Synthetique"))
ecart.fra.plot <- data.frame(date.plot, as.numeric(gaps.list.synth.fra))
View(ecart.fra.plot)
colnames(ecart.fra.plot) <- c("Dates", "Ecarts")
View(ecart.fra.plot)
ggplot(ecart.fra.plot, aes(Dates)) +
geom_line(aes(y = Ecarts), color = "blue") +
geom_hline(yintercept=(0),linetype="dotted")+
xlab("Dates")+
ylab("Ecarts")
theme_classic()
ggplot(ecart.fra.plot, aes(Dates)) +
geom_line(aes(y = Ecarts)) +
geom_hline(yintercept=(0),linetype="dotted")+
xlab("Dates")+
ylab("Ecarts")
theme_classic()
